---
title: "Models of IDR"
format: pdf
editor: visual
---

```{r setup, include=FALSE}
pacman::p_load(
  tidyverse,
  openalexR,
  readxl,
  writexl,
  rvest,
  tidytext,
  nplyr,
  arrow
)
```

A collection of functions

```{r}
Functions = list()

Functions$RS_diversity <- function(db, entity, trait, value, d_matrix) {
  {{ db }} %>%
    reframe(i = expand.grid({{ trait }},{{ trait }}),
            .by = {{ entity }}) %>%
    unnest(i) %>%
    rename(
      i = Var1,
      j = Var2,
    ) %>%
    left_join({{ db }} %>% transmute(
      {{ entity }},
      i = {{ trait }},
      p_i = {{ value }}
    )
    ) %>%
    left_join({{ db }} %>% transmute(
      {{ entity }},
      j = {{ trait }},
      p_j = {{ value }}
    )
    ) %>%
    mutate(d = map2_dbl(i,j,~{{ d_matrix }}[.y, .x])) %>%
    summarise(.by = {{ entity }},
              RS = sum(p_i * p_j * d),
              True_RS = 1 / (1 - RS)
    )
}

Functions$Gini_diversity <- function(db, entity, trait, value, d_matrix) {
   {{ db }} %>%
    mutate(d = map_dbl({{trait }},
                       ~(
                         sum({{ d_matrix }}[.x,]) +
                         sum({{ d_matrix }}[,.x])
                         ) / n()^2,
           ),
           .by = {{ entity }}) %>%
    mutate(.by = {{ entity }},
              LWBR = n() * ineq::Gini({{ value }}) * d)
}
```

## Building the D-matrix (of dissimilarities)

```{r}
concepts = list()

oa_fetch(
  entity = "concepts",
  level = c(0:1)
) -> concepts$concepts

concepts$concepts_polished <- concepts$concepts %>%
  arrange(level) %>%
  unnest(ancestors,
         names_sep = "_") %>%
    transmute(
    id,
    concept = display_name,
    level,
    ancestor = ancestors_display_name,
    related_concepts
  )
  
```

## Pre-Processing

Importing Journals from ANVUR Area 13 (Italy) and from ABS (UK).

```{r}
journals <- read_excel("ACB.xlsx") %>%
  filter(`Level 2021` != "1.0") %>%
  transmute(ISSN,Title,ABS=1) %>%
  full_join(
    read_excel("Area13.xlsx") %>%
  filter_at(vars(-TITOLO), any_vars(. %>% str_detect("A"))) %>%
  transmute(
    Title = TITOLO,
    ISSN = ISSN %>% str_replace("‐","-")
  ) %>%
  mutate(ANVUR = 1),
  by = "ISSN",
  ) %>%
  transmute(
    ISSN,
    Title = ifelse(Title.x %>% is.na(),
                   Title.y,Title.x),
    ABS = coalesce(ABS,0),
    ANVUR = coalesce(ANVUR,0)
  ) %>%
  distinct(ISSN,
           .keep_all = T)

oa_fetch(
  entity = "venues",
  issn = journals %>% pull(ISSN) %>% unique(),
) %>%
  transmute(id,
              Journal = display_name,
              ISSN = issn,
              counts_by_year,
              works_count,
              x_concepts,
              works_api_url) %>%
  unnest(ISSN) %>%
    left_join(journals %>% select(-Title))  %>%
  filter(!ABS %>% is.na(),
         !ABS %>% is.na()) %>%
  distinct(Journal, .keep_all = T) -> journals

```

Retrieve papers

```{r}
oa_fetch(
  entity = "works",
  primary_location.source.id = journals %>%
    filter(ABS == 1) %>% pull(id),
  publication_year = c(2018,2019,2021,2022),
  authorships.institutions.country_code = c("GB"),
  authorships.institutions.type = "education"
) -> papers_UK_fetched

oa_fetch(
  entity = "works",
  primary_location.source.id = journals %>%
    filter(ANVUR == 1) %>% pull(id),
  publication_year = c(2018,2019,2021,2022),
  authorships.institutions.country_code = c("IT"),
  authorships.institutions.type = "education"
) -> papers_ITA_fetched
```

Associate papers with UK Business Schools

```{r}
papers_UK_fetched %>%
  filter(!is.na(author)) %>%
  distinct(display_name,
           .keep_all = T) %>%
  unnest(author) %>%
  mutate(author_contribution = 1/n(),
         .by = display_name) %>%
    filter(institution_country_code == "GB",
           institution_type == "education") %>%
  transmute(
    id,
    Journal = so,
    Title = display_name,
    publication_date,
    year = publication_year,
    author = au_display_name,
    author_contribution,
    au_orcid,
    au_id,
    institution = institution_display_name,
    department = au_affiliation_raw,
    references_list = referenced_works,
    cited_by_count,
    counts_by_year,
    so_id,
    concepts) -> autorships_UK
```

I will now make this into a Excel file in order to make it easier to check it outside R

```{r}
autorships_UK %>%
  select(Journal,
         Title,
         publication_date,
         author,
         institution,
         department) %>%
  writexl::write_xlsx("authorships.xlsx")
```

### Scrape Business Schools in UK

```{r}

read_html("https://charteredabs.org/membership/directory/") %>%
  html_elements(".alpha_members .interest") %>%
  html_text() %>%
  tibble(Name = .) -> ukbs_list

ukbs_list %>%
  write_xlsx("UKBS_list.xlsx")
```

### Polishing departmental affiliation

```{r}
autorships_UK %>%
  select(id,department) %>%
  count(department) %>%
  arrange(-n)
```
