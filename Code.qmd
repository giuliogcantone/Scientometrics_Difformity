---
title: "Models of IDR"
format: pdf
editor: visual
---

```{r setup, include=FALSE}
pacman::p_load(
  tidyverse,
  tidymodels,
  openalexR,
  readxl,
  writexl,
  proxy,
  rvest,
  tidytext,
  nplyr,
  arrow,
  grid,
  shadowtext,
  ggExtra,
  hrbrthemes
)
```

## Building Z

```{r}
oa_fetch(
  entity = "concepts",
  level = c(0,1)
) -> concepts

```

```{r}
concepts %>%
  rename(concept = display_name,
         rel=related_concepts) %>%
  select(concept,
         level,
         rel) %>%
  unnest(rel,
         names_sep = "_") %>%
  rename(rel_concept = rel_display_name) %>%
  filter(rel_level < 2) %>%
  select(i = concept,
         j = rel_concept,
         c = rel_score,
         rel_level
         )%>%
  mutate(c =
           case_when(
             rel_level == 0 ~ c/max(c),
             TRUE ~ c
           ),
         .by = c(rel_level)) %>%
  select(i, j, c) -> Z

crossing(i = concepts$display_name,
         j = concepts$display_name
            ) %>%
  as_tibble() %>%
  arrange(i,j) %>%
  left_join(Z,
            by = c("i", "j")) %>%
  mutate(c = ifelse(i==j,max(c,na.rm = T),c),
         c = ifelse(is.na(c),0,c)) %>%
  pivot_wider(names_from = j,
              values_from = c,
              values_fill = 0
              ) %>%
  select(i, sort(names(.)[-1])) %>%
  select(-i) %>%
  as.matrix() -> Z

colnames(Z) -> row.names(Z)

proxy::simil(Z, method = "cosine") %>%
  as.matrix(diag = 1) -> Z #%>%
#  as.data.frame() %>%
#  rownames_to_column("i") %>%
#  pivot_longer(-i, names_to = "j", values_to = "z") %>%
#  as_tibble()
#-> Z
```

## Pre-Processing

### Scrape Business Schools in UK

```{r}

read_html("https://charteredabs.org/membership/directory/") %>%
  html_elements(".alpha_members .interest") %>%
  html_text() %>%
  tibble(Name = .) -> ukbs_list

ukbs_list %>%
  write_xlsx("UKBS_list.xlsx")
```

Importing Journals from ANVUR Area 13 (Italy) and from ABS (UK).

```{r}
journals <- read_excel("ACB.xlsx") %>%
  filter(`Level 2021` != "1.0") %>%
  transmute(ISSN,Title,ABS=1) %>%
  full_join(
    read_excel("Area13.xlsx") %>%
  filter_at(vars(-TITOLO), any_vars(. %>% str_detect("A"))) %>%
  transmute(
    Title = TITOLO,
    ISSN = ISSN %>% str_replace("‐","-")
  ) %>%
  mutate(ANVUR = 1),
  by = "ISSN",
  ) %>%
  transmute(
    ISSN,
    Title = ifelse(Title.x %>% is.na(),
                   Title.y,Title.x),
    ABS = coalesce(ABS,0),
    ANVUR = coalesce(ANVUR,0)
  ) %>%
  distinct(ISSN,
           .keep_all = T)

oa_fetch(
  entity = "venues",
  issn = journals %>% pull(ISSN) %>% unique(),
) %>%
  transmute(id,
              Journal = display_name,
              ISSN = issn,
              counts_by_year,
              works_count,
              x_concepts,
              works_api_url) %>%
  unnest(ISSN) %>%
    left_join(journals %>% select(-Title))  %>%
  filter(!ABS %>% is.na(),
         !ABS %>% is.na()) %>%
  distinct(Journal, .keep_all = T) -> journals

```

Retrieve papers

```{r}
oa_fetch(
  entity = "works",
  primary_location.source.id = journals %>%
    filter(ABS == 1) %>% pull(id),
  publication_year = c(2018,2019,2021,2022),
  authorships.institutions.country_code = c("GB"),
  authorships.institutions.type = "education"
) -> papers_UK_fetched

papers_UK_fetched <- papers_UK_fetched %>%
  filter(display_name %>% str_detect("Erratum", negate = T),
         display_name %>% str_detect("Editor", negate = T))

oa_fetch(
  entity = "works",
  primary_location.source.id = journals %>%
    filter(ANVUR == 1) %>% pull(id),
  publication_year = c(2018,2019,2021,2022),
  authorships.institutions.country_code = c("IT"),
  authorships.institutions.type = "education"
) -> papers_ITA_fetched
```

Associate papers with UK Unis

```{r}
papers_UK_fetched %>%
  filter(!is.na(author)) %>%
  distinct(display_name,
           .keep_all = T) %>%
  unnest(author) %>%
  mutate(author_contribution = 1/n(),
         .by = display_name) %>%
    filter(institution_country_code == "GB",
           institution_type == "education") %>%
  transmute(
    id,
    Journal = so,
    Title = display_name,
    publication_date,
    year = publication_year,
    author = au_display_name,
    author_contribution,
    au_orcid,
    au_id,
    institution = institution_display_name,
    department = au_affiliation_raw,
    references_list = referenced_works,
    cited_by_count,
    counts_by_year,
    so_id,
    concepts) -> autorships_UK
```

I will now make this into a Excel file in order to make it easier to check it outside R

```{r}
autorships_UK %>%
  select(Journal,
         Title,
         publication_date,
         author,
         institution,
         department) %>%
  writexl::write_xlsx("authorships.xlsx")
```

How many authors for how many Universities?

```{r}
autorships_UK %>%
  count(institution) %>%
  arrange(-n) %>%
  filter(n > 100)

autorships_UK %>%
  summarise(n = sum(author_contribution),
            .by = institution) %>%
  arrange(-n) %>%
  filter(n > 50)

autorships_UK %>%
  count(author) %>%
  arrange(-n)
```

HYPOTHESIS, COVID IMPACTED POSITIVELY PUBLISHING?

```{r}

autorships_UK %>%
  summarise(total_a = sum(author_contribution),
            .by = year) %>%
  mutate(year = year %>% factor(levels = c("2022","2021","2019","2018"))
         ) %>%
  ggplot() +
  geom_col(aes(total_a, year),
           fill = "navy", width = 0.6) +
  scale_x_continuous(
  expand = c(0, 0), # The horizontal axis does not extend to either side
    position = "top"  # Labels are located on the top
  ) +
  # The vertical axis only extends upwards 
  scale_y_discrete(expand = expansion(add = c(0, 0.5))) +
  theme(
    # Set background color to white
    panel.background = element_rect(fill = "white"),
    # Set the color and the width of the grid lines for the horizontal axis
    panel.grid.major.x = element_line(color = "#A8BAC4", size = 0.3),
    # Remove tick marks by setting their length to 0
    axis.ticks.length = unit(0, "mm"),
    # Remove the title for both axes
    axis.title = element_blank(),
    # Only left line of the vertical axis is painted in black
    axis.line.y.left = element_line(color = "black"),
    # Remove labels from the vertical axis
    axis.text.y = element_blank(),
    # But customize labels for the horizontal axis
    axis.text.x = element_text(family = "Econ Sans Cnd", size = 16)
  ) +
  geom_text(
    aes(100, y = year, label = year),
    hjust = 0,
    nudge_x = 0.3,
    colour = "white",
    family = "Econ Sans Cnd",
    size = 7
  )

```

# DIVERSITY AND DIFFORMITY

```{r}
papers_UK_fetched %>%
  select(X = id,
         Y = so,
         concepts) %>%
  unnest(concepts) %>%
  select(X,Y,p = score,i=display_name,level) %>%
  filter(level < 2) %>%
  select(-level) %>%
  mutate(p_o = p/sum(p),
         .by = X) %>%
  select(-p) -> papers

journals %>% select(Y = Journal,
                     x_concepts) %>%
  filter(Y %in% papers$Y) %>%
  unnest(x_concepts) %>%
  select(Y,p = score,i=display_name,level) %>%
  filter(level < 2) %>%
  select(-level) %>%
  mutate(p_e = p/sum(p),
         .by = Y) %>%
  select(-p) ->journals_disc
```

### Diversity

```{r}
papers %>%
summarize(crossed = list(crossing(i, i)),
          .by = X) %>%
  unnest(crossed) %>%
  rename(
    i = i...1,
    j = i...2
  ) %>%
  left_join(papers %>% transmute(
      X,
      i = i,
      p_i = p_o
    )
  ) %>%
    left_join(papers %>% transmute(
      X,
      j = i,
      p_j = p_o
    )
  ) %>%
  mutate(d = map2_dbl(i,j,~1 - Z[.x,.y]
  )) %>%
  summarise(.by = X,
            RS = sum(p_i * p_j * d),
            True_RS = 1 / (1 - RS)) -> Div_db
```

### Difformity

```{r}
journals_disc %>%
  full_join(distinct(papers, X, Y), by = "Y") %>%
  full_join(papers, by = c("Y", "i", "X")) %>%
  select(Y,X,i,p_e,p_o) %>%
  arrange(Y, X, i) %>%
  mutate(p_e = ifelse(is.na(p_e),0,p_e),
         p_o = ifelse(is.na(p_o),0,p_o)) %>%
  mutate(w = map(i,
                 ~ Z[.x,i]),
         .by = "X") %>%
  mutate(p_e = map_dbl(w, ~ sum(.x * p_e)),
         p_o = map_dbl(w, ~ sum(.x * p_o)),
         p_e = p_e/sum(p_e),
         p_o = p_o/sum(p_o),
         .by = "X") %>%
  summarise(
    phi = sum(abs(p_e - p_o)/((abs(p_e) + abs(p_o))*2), na.rm = T),
    .by = "X"
  ) -> Diff_db
```

## Joining authorships into institutions

```{r}

autorships_UK %>%
  count(institution) %>%
  arrange(-n) %>%
  right_join(autorships_UK) %>%
  filter(n > 100) %>%
  select(X = id,
         Y = Journal,
         year,
         a = author_contribution,
         institution) %>%
  left_join(Div_db %>% select(-RS)) %>%
  right_join(Diff_db) %>%
  mutate(Period = ifelse(year > 2020,"POST","PRE") %>%
           factor)%>%
  summarise(.by = c(institution,Period),
            Div = sum(True_RS * a)/sum(a),
            Diff = sum(phi * a)/sum(a)
            ) %>%
  drop_na() -> Institutions_db

```

# Results

```{r}
Institutions_db %>%
  summarise(corr = cor(Div,Diff))

Institutions_db %>%
  summarise(mean_div = mean(Div),
            mean_diff = mean(Diff),
            .by=Period)

Institutions_db %>%
  lm(data = .,
     formula(Diff ~ Period)) %>%
  tidy() %>%
  janitor::adorn_rounding(3)

Institutions_db %>%
  lm(data = .,
     formula(Div ~ Period)) %>%
  tidy() %>%
  janitor::adorn_rounding(3)
```

```{r}
ggMarginal(
Institutions_db %>%
  ggplot(aes(Div,
             Diff,
             color = Period)) +
  geom_point() +
  geom_hline(
    yintercept= 4.6,
    color = "navy",
    linetype = "dashed") +
    geom_hline(
    yintercept= 4.37,
    color = "salmon",
    linetype = "dashed") +
  geom_vline(
    xintercept= 3.76,
    color = "navy",
    linetype = "dashed") +
    geom_vline(
    xintercept= 3.73,
    color = "salmon",
    linetype = "dashed") +
  annotate('text',
           label =
           'Correlation = .437',
           x = 4.575, y = 3.3,
           hjust = 1, vjust = 0,
           size = 5,
           color = "brown",
           lineheight = 1) +
  xlab("Avg. Diversity") +
  ylab("Avg. Difformity") +
  scale_color_viridis_d(option = "A",
                        begin = .3,
                        end = .9) +
  theme_test(base_size = 14.5)+
  theme(legend.position = c(0.1, 0.85),
        legend.title = element_blank()),
groupColour = T
)

Institutions_db %>% View()

?ggExtra::ggMarginal()
```

## Lollipops

```{r}

Institutions_db %>%
  head(60) %>%
  pivot_wider(names_from = Period,
              values_from = c(Div,Diff)) -> Lollipops

Lollipops %>%
  write_xlsx("Lolli.xlsx")
read_xlsx("Lolli2.xlsx") -> Lollipops


Lollipops %>%
  mutate(
    institution = factor(institution,
                         institution[order(Diff_POST)]),
    color = if_else(Diff_POST > Diff_PRE,"+","-")) %>%
  ggplot() +
  geom_segment(aes(y = institution,
                   yend=institution,
                   x=Diff_PRE,
                   xend=Diff_POST),
               color = "black"
               ) +
  geom_point(aes(y=institution, x=Diff_POST), color="navy", size=3 ) +
  geom_point(aes(y=institution, x=Diff_PRE), color="salmon", size=3) +
  theme_ipsum() +
  theme(
    axis.title.y = element_blank(),
    legend.position = "none",
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank()
  ) +
  xlab("Shift in Interdisciplinary Difformity [Business Studies]")



Lollipops %>%
  mutate(
    institution = factor(institution,
                         institution[order(Div_POST)]),
    color = if_else(Div_POST > Div_PRE,"+","-")) %>%
  ggplot() +
  geom_segment(aes(y = institution,
                   yend=institution,
                   x=Div_PRE,
                   xend=Div_POST),
               color = "black"
               ) +
  geom_point(aes(y=institution, x=Div_POST), color="navy", size=3 ) +
  geom_point(aes(y=institution, x=Div_PRE), color="salmon", size=3) +
  theme_ipsum() +
  theme(
    axis.title.y = element_blank(),
    legend.position = "none",
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank()
  ) +
  xlab("Shift in Interdisciplinary Diversity after Covid-19 [Business Studies]")
```

## Paul asked for departments

```{r}

autorships_UK %>%
  filter(institution %in%
           (autorships_UK %>%
  count(institution) %>%
  arrange(-n) %>%
  head(1) %>%
  pull(institution))) -> depts

  autorships_UK %>%
  count(institution) %>%
  arrange(-n) %>%
  head(1) %>%
    pull(institution)
```

# Investigating Sussex

```{r}

papers_UK_fetched %>%
  unnest(institution = map(author, "institution_display_name")) %>%
  filter(institution == "University of Sussex") %>%
  pull(id) %>% unique() -> papers_sussex

autorships_UK %>%
  filter(institution == "University of Sussex") %>%
    select(X = id,
         Y = Journal,
         year,
         a = author_contribution,
         author) %>%
  left_join(Div_db %>% select(-RS)) %>%
  right_join(Diff_db) %>%
  mutate(Period = ifelse(year > 2020,"POST","PRE") %>%
           factor)%>%
  summarise(.by = c(author,Period),
            Div = sum(True_RS * a)/sum(a),
            Diff = sum(phi * a)/sum(a),
            Prod = sum(a)
            ) %>%
  drop_na() -> Sussex_authors

Sussex_authors %>%
  pivot_wider(
    names_from = Period,
    values_from = c(Div,Diff,Prod)
  ) %>%
  mutate(across(everything(), ~replace(., is.na(.), 0))) %>%
  rowwise() %>%
  mutate(Tot_Prod = sum(c(Prod_PRE,Prod_POST), na.rm = T),
         Shift_div =  sum(c(Div_POST,
                            -1*Div_PRE), na.rm = T),
         Shift_diff = sum(c(Diff_POST,
                            -1*Diff_PRE), na.rm = T),
         .after = 1
         ) %>%
  arrange(-Tot_Prod) -> Sussex_authors
  

Sussex_authors %>%
  filter(Tot_Prod > 2) %>%
  janitor::adorn_rounding(2)

autorships_UK %>%
  filter(author == "Paul Nightingale")
```
